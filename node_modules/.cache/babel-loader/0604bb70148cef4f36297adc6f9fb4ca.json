{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piyus\\\\Downloads\\\\450-DSA-master\\\\450-DSA-master\\\\src\\\\components\\\\Topic\\\\Topic.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Spinner from 'react-bootstrap/Spinner';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Badge from 'react-bootstrap/Badge';\nimport Fade from 'react-reveal/Fade';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport './Topic.css';\nimport { ThemeContext } from '../../App';\nimport Button from 'react-bootstrap/Button';\nexport default function Topic({\n  data,\n  updateData\n}) {\n  /*\n     This component takes data releted to a paticular topic\n     and updateData() from App component\n   */\n\n  /*\n     Setting state for fields that comes from `data` prop\n     so that `data` prop is not undefined on reload\n   */\n  const [select, setSelected] = useState([]);\n  const [isBookmarkSortFilterSelected, setIsBookmarkSortFilterSelected] = useState(false);\n  const [isSelectedComplete, setSelectedComplete] = useState(true);\n  const [sortMode, setSortMode] = useState({\n    dataField: '_is_selected',\n    order: 'asc'\n  });\n  const [questionsTableData, setQuestionsTableData] = useState([]);\n  const [topicName, setTopicName] = useState('');\n  const dark = useContext(ThemeContext); // updating states using useEffect with dependency  on `data` prop\n\n  useEffect(() => {\n    if (data !== undefined) {\n      let doneQuestion = [];\n      let tableData = data.questions.map((question, index) => {\n        if (question.Done) {\n          doneQuestion.push(index);\n        }\n        /*\n            |\tHidden properties `_is_selected` and `_search_text` are used to sort the table\n            |\tand search the table respectively. react-bootstrap-table does not allow sorting\n            |\tby selectRow by default, and requires plain text to perform searches.\n            */\n\n\n        return {\n          id: index,\n          question: /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: question.URL,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: {\n              fontWeight: '600',\n              fontSize: '20px'\n            },\n            className: \"question-link\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }\n          }, question.Problem)),\n          links: /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-evenly',\n              alignItems: 'center',\n              gap: '10px'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 7\n            }\n          }, question.URL2.length > 0 && /*#__PURE__*/React.createElement(\"img\", {\n            src: 'https://i.ibb.co/RcQ5qLs/Coding-Ninjas-logo.jpg',\n            width: \"30px\",\n            height: \"25px\",\n            alt: \"icon\",\n            style: {\n              float: 'right',\n              cursor: 'pointer'\n            },\n            onClick: () => {\n              window.open(`${question.URL2}&utm_source=website&utm_medium=affiliate&utm_campaign=450dsatracker`, '_blank');\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 35\n            }\n          }), /*#__PURE__*/React.createElement(\"img\", {\n            src: question.URL.includes('geeksforgeeks') ? 'https://img.icons8.com/color/24/000000/GeeksforGeeks.png' : 'https://img.icons8.com/external-tal-revivo-color-tal-revivo/24/000000/external-level-up-your-coding-skills-and-quickly-land-a-job-logo-color-tal-revivo.png',\n            width: \"30px\",\n            height: \"25px\",\n            alt: \"icon\",\n            style: {\n              float: 'right',\n              cursor: 'pointer'\n            },\n            onClick: () => {\n              window.open(question.URL, '_blank');\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 8\n            }\n          })),\n          controls: /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-evenly',\n              alignItems: 'center'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n            placement: \"left\",\n            overlay: !question.Bookmark ? renderTooltipAddBookmark : renderTooltipRemoveBookmark,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 8\n            }\n          }, /*#__PURE__*/React.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"currentColor\",\n            class: question.Bookmark === 1 ? 'bi bi-bookmark-fill' : 'bi bi-bookmark',\n            viewBox: \"0 0 16 16\",\n            style: {\n              float: 'right',\n              color: 'green',\n              cursor: 'pointer',\n              paddingLeft: '1px'\n            },\n            onClick: () => handleBookmark(index, question),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 9\n            }\n          }, question.Bookmark ? /*#__PURE__*/React.createElement(\"path\", {\n            d: \"M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 11\n            }\n          }) : /*#__PURE__*/React.createElement(\"path\", {\n            d: \"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 11\n            }\n          }))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n            placement: \"left\",\n            overlay: question.Notes && question.Notes.length !== 0 ? renderTooltipView : renderTooltipAdd,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 8\n            }\n          }, /*#__PURE__*/React.createElement(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"16\",\n            height: \"16\",\n            fill: \"currentColor\",\n            class: question.Notes && question.Notes.length !== 0 ? 'bi bi-sticky-fill' : 'bi bi-sticky',\n            viewBox: \"0 0 16 16\",\n            style: {\n              float: 'right',\n              color: 'green',\n              cursor: 'pointer'\n            },\n            onClick: () => shownotes(index),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 9\n            }\n          }, question.Notes && question.Notes.length !== 0 ? /*#__PURE__*/React.createElement(\"path\", {\n            d: \"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zm6 8.5a1 1 0 0 1 1-1h4.396a.25.25 0 0 1 .177.427l-5.146 5.146a.25.25 0 0 1-.427-.177V9.5z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 11\n            }\n          }) : /*#__PURE__*/React.createElement(\"path\", {\n            d: \"M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zM2 2.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V8H9.5A1.5 1.5 0 0 0 8 9.5V14H2.5a.5.5 0 0 1-.5-.5v-11zm7 11.293V9.5a.5.5 0 0 1 .5-.5h4.293L9 13.793z\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 11\n            }\n          })))),\n          _is_selected: question.Done,\n          Bookmark: question.Bookmark,\n          _search_text: question.Problem\n        };\n      });\n      setQuestionsTableData(tableData);\n      setTopicName(data.topicName);\n      setSelected(doneQuestion);\n    }\n  }, [data]); //tooltip functions\n\n  const renderTooltipAddBookmark = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 3\n    }\n  }), \"Add Bookmark\");\n\n  const renderTooltipRemoveBookmark = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 3\n    }\n  }), \"Remove Bookmark\");\n\n  const renderTooltipSortBookmark = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 3\n    }\n  }), \"Show Bookmarks\");\n\n  const renderTooltipResetSortBookmark = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 3\n    }\n  }), \"Reset Show Bookmarks\");\n\n  const renderTooltipView = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 3\n    }\n  }), \"View Notes\");\n\n  const renderTooltipAdd = props => /*#__PURE__*/React.createElement(Tooltip, Object.assign({}, props, {\n    className: \"in\",\n    id: \"button-tooltip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 3\n    }\n  }), \"Add Notes\"); // seacrh bar config\n\n\n  const Sorter = x => {\n    if (!x) {\n      setSortMode({\n        dataField: 'Bookmark',\n        order: 'desc'\n      });\n      setSelectedComplete(x);\n    } else {\n      setSortMode({\n        dataField: '_is_selected',\n        order: 'asc'\n      });\n      setSelectedComplete(x);\n    }\n\n    setIsBookmarkSortFilterSelected(!x);\n  };\n\n  const SearchBar = props => {\n    const handleChange = e => {\n      props.onSearch(e.target.value);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topic-input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RandomButton, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"text-center search-input-container\",\n      placeholder: \"Search Question.. \\uD83D\\uDD0D\",\n      \"aria-label\": \"Search Question\",\n      \"aria-describedby\": \"basic-addon2\",\n      onChange: handleChange,\n      style: {\n        fontSize: '18px',\n        fontWeight: '600'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"success\",\n      style: {\n        borderTopLeftRadius: '0px',\n        borderBottomLeftRadius: '0px',\n        background: 'rgb(200, 230, 201)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"completed-questions\",\n      style: {\n        color: 'black',\n        padding: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 10\n      }\n    }, data.doneQuestions, \"/\", data.questions.length), ' ', \"Done\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n      className: \"emojiFix\",\n      role: \"img\",\n      \"aria-label\": \"checker\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 10\n      }\n    }, \"\\u2705\")))), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"left\",\n      overlay: isBookmarkSortFilterSelected ? renderTooltipResetSortBookmark : renderTooltipSortBookmark,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: isBookmarkSortFilterSelected ? 'success' : 'outline-success',\n      className: \"sort-button\",\n      onClick: () => {\n        Sorter(isBookmarkSortFilterSelected);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"label-emoji\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }, \"\\uD83C\\uDFF7\\uFE0F\"))))));\n  }; // table config\n\n\n  const columns = [{\n    dataField: 'id',\n    text: 'id',\n    headerStyle: {\n      width: '40px',\n      fontSize: '20px',\n      textAlign: 'center'\n    },\n    style: {\n      fontSize: '20px',\n      cursor: 'pointer',\n      textAlign: 'center'\n    },\n    events: {\n      onClick: (e, column, columnIndex, row, rowIndex) => {\n        handleSelect(row, !row._is_selected);\n      }\n    }\n  }, {\n    dataField: 'question',\n    text: 'Questions',\n    headerStyle: {\n      fontSize: '20px',\n      textAlign: 'center',\n      width: '80%'\n    }\n  }, {\n    dataField: 'links',\n    text: 'Links',\n    headerStyle: {\n      fontSize: '20px',\n      textAlign: 'center'\n    }\n  }, {\n    dataField: 'controls',\n    text: '',\n    headerStyle: {\n      fontSize: '20px',\n      textAlign: 'center'\n    }\n  }, {\n    dataField: '_is_selected',\n    text: 'Is Selected',\n    headerStyle: {\n      fontSize: '20px'\n    },\n    hidden: true,\n    sort: true\n  }, {\n    dataField: '_search_text',\n    text: 'Search Text',\n    headerStyle: {\n      fontSize: '20px'\n    },\n    hidden: true\n  }, {\n    dataField: 'Bookmark',\n    text: 'Bookmark',\n    headerStyle: {\n      fontSize: '20px'\n    },\n    hidden: true\n  }];\n  const rowStyle = {\n    fontSize: '20px'\n  };\n  const selectRow = {\n    mode: 'checkbox',\n    style: {\n      background: dark ? '#393E46' : '#c8e6c9',\n      fontSize: '24px'\n    },\n    selected: select,\n    onSelect: handleSelect,\n    hideSelectAll: true\n  }; // func() triggered when a question is marked done\n\n  function handleSelect(row, isSelect) {\n    let key = topicName.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();\n    let newDoneQuestion = [...select];\n    let updatedQuestionsStatus = data.questions.map((question, index) => {\n      if (row.id === index) {\n        question.Done = isSelect;\n\n        if (isSelect) {\n          newDoneQuestion.push(row.id);\n        } else {\n          var pos = newDoneQuestion.indexOf(row.id);\n          newDoneQuestion.splice(pos, 1);\n        }\n\n        return question;\n      } else {\n        return question;\n      }\n    });\n    updateData(key, {\n      started: newDoneQuestion.length > 0 ? true : false,\n      doneQuestions: newDoneQuestion.length,\n      questions: updatedQuestionsStatus\n    }, data.position);\n    if (isSelectedComplete) displayToast(isSelect, row.id);\n  } // trigger an information message for user on select change\n\n\n  function displayToast(isSelect, id) {\n    const {\n      type,\n      icon,\n      dir\n    } = {\n      type: isSelect ? 'Done' : 'Incomplete',\n      icon: isSelect ? '🎉' : '🙇🏻‍♂️',\n      dir: isSelect ? '👇🏻' : '👆🏻'\n    };\n    const title = `${isSelect ? select.length + 1 : select.length - 1}/${data.questions.length} Done`;\n    const subTitle = `Question pushed ${dir} the table.`;\n    const Card = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 5\n      }\n    }, title, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"emojiFix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 14\n      }\n    }, icon)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"toast-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 5\n      }\n    }, subTitle));\n    toast(Card, {\n      className: `toast-${type}`,\n      autoClose: 2000,\n      closeButton: true\n    });\n  } //Notes component\n\n\n  const NoteSection = props => {\n    var _data$questions$id;\n\n    let id = localStorage.getItem('cid');\n    const [quickNotes, setQuickNotes] = useState((_data$questions$id = data.questions[id]) === null || _data$questions$id === void 0 ? void 0 : _data$questions$id.Notes);\n\n    const addnewnotes = event => {\n      setQuickNotes(event.target.value);\n    };\n\n    const onadd = () => {\n      let key = topicName.replace(/[^A-Z0-9]+/gi, '_').toLowerCase(); // let id = localStorage.getItem(\"cid\");\n\n      if (id) {\n        let que = data.questions;\n        que[id].Notes = quickNotes.trim().length === 0 ? '' : quickNotes.trim();\n        updateData(key, {\n          started: data.started,\n          doneQuestions: data.doneQuestions,\n          questions: que\n        }, data.position);\n        localStorage.removeItem('cid');\n      } else {\n        saveAndExitNotes();\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"note-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"note-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-title\",\n      style: {\n        color: 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      maxLength: \"432\",\n      className: \"note-section\",\n      placeholder: \"your notes here\",\n      onChange: addnewnotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"note-exit\",\n      onClick: saveAndExitNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 8\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"note-save\",\n      onClick: onadd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 8\n      }\n    }, \"Save\")))));\n  }; //function for bookmarks\n\n\n  function handleBookmark(row, quest) {\n    let key = topicName.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();\n    let newDoneQuestion = [...select];\n    let updatedQuestionsStatus = data.questions.map((question, index) => {\n      if (row === index) {\n        question.Bookmark = quest.Bookmark ? false : true;\n        return question;\n      } else {\n        return question;\n      }\n    });\n    updateData(key, {\n      started: newDoneQuestion.length > 0 ? true : false,\n      doneQuestions: newDoneQuestion.length,\n      questions: updatedQuestionsStatus\n    }, data.position); // console.log(quest.Bookmark)\n  } //function for closing notes\n\n\n  function saveAndExitNotes() {\n    document.getElementsByClassName('note-section')[0].style.display = 'none';\n    document.getElementsByClassName('note-exit')[0].style.display = 'none';\n    document.getElementsByClassName('note-save')[0].style.display = 'none';\n    document.getElementsByClassName('note-area')[0].style.display = 'none';\n    localStorage.removeItem('cid');\n  } //funtion for taking notes\n\n\n  function shownotes(ind) {\n    document.getElementsByClassName('note-section')[0].style.display = 'block';\n    document.getElementsByClassName('note-exit')[0].style.display = 'block';\n    document.getElementsByClassName('note-save')[0].style.display = 'block';\n    document.getElementsByClassName('note-area')[0].style.display = 'block';\n    localStorage.setItem('cid', ind);\n    document.getElementsByClassName('note-section')[0].value = data.questions[ind].Notes;\n    document.getElementsByClassName('question-title')[0].innerHTML = data.questions[ind].Problem;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 5\n    }\n  }, \"Topics\"), \"/\", topicName), data === undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"grow\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 6\n    }\n  })) : /*#__PURE__*/React.createElement(ToolkitProvider, {\n    className: \"float-right\",\n    keyField: \"id\",\n    data: questionsTableData,\n    columns: columns,\n    rowStyle: rowStyle,\n    search: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 5\n    }\n  }, props => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-rand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 8\n    }\n  }, SearchBar({ ...props.searchProps\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container container-custom\",\n    style: {\n      overflowAnchor: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Fade, {\n    duration: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n    selectRow: selectRow,\n    sort: sortMode,\n    classes: dark ? 'dark-table' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 10\n    }\n  })))))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(NoteSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 4\n    }\n  }));\n}\n\nfunction RandomButton({\n  data\n}) {\n  let min = 0;\n  let max = data.questions.length - 1;\n  const [rnd, setRnd] = useState(Math.floor(Math.random() * (max - min)) + min);\n\n  function pickRandomHandler() {\n    setRnd(Math.floor(Math.random() * (max - min)) + min);\n  }\n\n  return /*#__PURE__*/React.createElement(Button, {\n    className: \"pick-random-btn\",\n    onClick: pickRandomHandler,\n    variant: \"outline-primary\",\n    href: data.questions[rnd].URL,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 3\n    }\n  }, \"Pick Random\", ' ', /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"woman-juggling-emoji\",\n    className: \"emojiFix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 4\n    }\n  }, \"\\uD83E\\uDD39\\uD83C\\uDFFB\\u200D\\u2640\\uFE0F\"));\n}","map":{"version":3,"sources":["C:/Users/piyus/Downloads/450-DSA-master/450-DSA-master/src/components/Topic/Topic.js"],"names":["React","useState","useEffect","useContext","BootstrapTable","ToolkitProvider","InputGroup","FormControl","Spinner","OverlayTrigger","Tooltip","Badge","Fade","Link","toast","ToastContainer","ThemeContext","Button","Topic","data","updateData","select","setSelected","isBookmarkSortFilterSelected","setIsBookmarkSortFilterSelected","isSelectedComplete","setSelectedComplete","sortMode","setSortMode","dataField","order","questionsTableData","setQuestionsTableData","topicName","setTopicName","dark","undefined","doneQuestion","tableData","questions","map","question","index","Done","push","id","display","justifyContent","URL","fontWeight","fontSize","Problem","links","alignItems","gap","URL2","length","float","cursor","window","open","includes","controls","Bookmark","renderTooltipAddBookmark","renderTooltipRemoveBookmark","color","paddingLeft","handleBookmark","Notes","renderTooltipView","renderTooltipAdd","shownotes","_is_selected","_search_text","props","renderTooltipSortBookmark","renderTooltipResetSortBookmark","Sorter","x","SearchBar","handleChange","e","onSearch","target","value","borderTopLeftRadius","borderBottomLeftRadius","background","padding","doneQuestions","columns","text","headerStyle","width","textAlign","style","events","onClick","column","columnIndex","row","rowIndex","handleSelect","hidden","sort","rowStyle","selectRow","mode","selected","onSelect","hideSelectAll","isSelect","key","replace","toLowerCase","newDoneQuestion","updatedQuestionsStatus","pos","indexOf","splice","started","position","displayToast","type","icon","dir","title","subTitle","Card","className","autoClose","closeButton","NoteSection","localStorage","getItem","quickNotes","setQuickNotes","addnewnotes","event","onadd","que","trim","removeItem","saveAndExitNotes","quest","document","getElementsByClassName","ind","setItem","innerHTML","searchProps","overflowAnchor","baseProps","RandomButton","min","max","rnd","setRnd","Math","floor","random","pickRandomHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Spinner from 'react-bootstrap/Spinner';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport Badge from 'react-bootstrap/Badge';\nimport Fade from 'react-reveal/Fade';\nimport { Link } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport './Topic.css';\nimport { ThemeContext } from '../../App';\nimport Button from 'react-bootstrap/Button';\n\nexport default function Topic({ data, updateData }) {\n\t/*\n    This component takes data releted to a paticular topic\n    and updateData() from App component\n  */\n\t/*\n    Setting state for fields that comes from `data` prop\n    so that `data` prop is not undefined on reload\n  */\n\tconst [select, setSelected] = useState([]);\n\tconst [isBookmarkSortFilterSelected, setIsBookmarkSortFilterSelected] = useState(false);\n\tconst [isSelectedComplete, setSelectedComplete] = useState(true);\n\tconst [sortMode, setSortMode] = useState({\n\t\tdataField: '_is_selected',\n\t\torder: 'asc',\n\t});\n\tconst [questionsTableData, setQuestionsTableData] = useState([]);\n\tconst [topicName, setTopicName] = useState('');\n\n\tconst dark = useContext(ThemeContext);\n\t// updating states using useEffect with dependency  on `data` prop\n\tuseEffect(() => {\n\t\tif (data !== undefined) {\n\t\t\tlet doneQuestion = [];\n\n\t\t\tlet tableData = data.questions.map((question, index) => {\n\t\t\t\tif (question.Done) {\n\t\t\t\t\tdoneQuestion.push(index);\n\t\t\t\t}\n\t\t\t\t/*\n        |\tHidden properties `_is_selected` and `_search_text` are used to sort the table\n        |\tand search the table respectively. react-bootstrap-table does not allow sorting\n        |\tby selectRow by default, and requires plain text to perform searches.\n        */\n\t\t\t\treturn {\n\t\t\t\t\tid: index,\n\t\t\t\t\tquestion: (\n\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t\t\t\t\t{/* Question link */}\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={question.URL}\n\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\t\tstyle={{ fontWeight: '600', fontSize: '20px' }}\n\t\t\t\t\t\t\t\tclassName='question-link'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{question.Problem}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t),\n\t\t\t\t\tlinks:(\n\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center', gap:'10px' }}>\n\t\t\t\t\t\t\t{question.URL2.length>0 && <img\n\t\t\t\t\t\t\t\tsrc={'https://i.ibb.co/RcQ5qLs/Coding-Ninjas-logo.jpg'}\n\t\t\t\t\t\t\t\twidth='30px'\n\t\t\t\t\t\t\t\theight='25px'\n\t\t\t\t\t\t\t\talt='icon'\n\t\t\t\t\t\t\t\tstyle={{ float: 'right', cursor: 'pointer' }}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\twindow.open(`${question.URL2}&utm_source=website&utm_medium=affiliate&utm_campaign=450dsatracker`, '_blank');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\tquestion.URL.includes('geeksforgeeks')\n\t\t\t\t\t\t\t\t\t\t? 'https://img.icons8.com/color/24/000000/GeeksforGeeks.png'\n\t\t\t\t\t\t\t\t\t\t: 'https://img.icons8.com/external-tal-revivo-color-tal-revivo/24/000000/external-level-up-your-coding-skills-and-quickly-land-a-job-logo-color-tal-revivo.png'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twidth='30px'\n\t\t\t\t\t\t\t\theight='25px'\n\t\t\t\t\t\t\t\talt='icon'\n\t\t\t\t\t\t\t\tstyle={{ float: 'right', cursor: 'pointer' }}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\twindow.open(question.URL, '_blank');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t),\n\t\t\t\t\tcontrols: (\n\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-evenly', alignItems: 'center' }}>\n\t\t\t\t\t\t\t{/* <img\n\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\tquestion.URL.includes('geeksforgeeks')\n\t\t\t\t\t\t\t\t\t\t? 'https://img.icons8.com/color/24/000000/GeeksforGeeks.png'\n\t\t\t\t\t\t\t\t\t\t: 'https://img.icons8.com/external-tal-revivo-color-tal-revivo/24/000000/external-level-up-your-coding-skills-and-quickly-land-a-job-logo-color-tal-revivo.png'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twidth='30px'\n\t\t\t\t\t\t\t\theight='25px'\n\t\t\t\t\t\t\t\talt='icon'\n\t\t\t\t\t\t\t\tstyle={{ float: 'right', cursor: 'pointer' }}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\twindow.open(question.URL, '_blank');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\tplacement='left'\n\t\t\t\t\t\t\t\toverlay={!question.Bookmark ? renderTooltipAddBookmark : renderTooltipRemoveBookmark}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\t\t\t\t\t\twidth='16'\n\t\t\t\t\t\t\t\t\theight='16'\n\t\t\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t\t\t\tclass={question.Bookmark === 1 ? 'bi bi-bookmark-fill' : 'bi bi-bookmark'}\n\t\t\t\t\t\t\t\t\tviewBox='0 0 16 16'\n\t\t\t\t\t\t\t\t\tstyle={{ float: 'right', color: 'green', cursor: 'pointer', paddingLeft: '1px' }}\n\t\t\t\t\t\t\t\t\tonClick={() => handleBookmark(index, question)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{question.Bookmark ? (\n\t\t\t\t\t\t\t\t\t\t<path d='M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z' />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<path d='M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z' />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\tplacement='left'\n\t\t\t\t\t\t\t\toverlay={question.Notes && question.Notes.length !== 0 ? renderTooltipView : renderTooltipAdd}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\t\t\t\t\t\twidth='16'\n\t\t\t\t\t\t\t\t\theight='16'\n\t\t\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t\t\t\tclass={question.Notes && question.Notes.length !== 0 ? 'bi bi-sticky-fill' : 'bi bi-sticky'}\n\t\t\t\t\t\t\t\t\tviewBox='0 0 16 16'\n\t\t\t\t\t\t\t\t\tstyle={{ float: 'right', color: 'green', cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\tonClick={() => shownotes(index)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{question.Notes && question.Notes.length !== 0 ? (\n\t\t\t\t\t\t\t\t\t\t<path d='M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zm6 8.5a1 1 0 0 1 1-1h4.396a.25.25 0 0 1 .177.427l-5.146 5.146a.25.25 0 0 1-.427-.177V9.5z' />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<path d='M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 15 8.586V2.5A1.5 1.5 0 0 0 13.5 1h-11zM2 2.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V8H9.5A1.5 1.5 0 0 0 8 9.5V14H2.5a.5.5 0 0 1-.5-.5v-11zm7 11.293V9.5a.5.5 0 0 1 .5-.5h4.293L9 13.793z' />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t),\n\n\t\t\t\t\t_is_selected: question.Done,\n\t\t\t\t\tBookmark: question.Bookmark,\n\t\t\t\t\t_search_text: question.Problem,\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetQuestionsTableData(tableData);\n\t\t\tsetTopicName(data.topicName);\n\t\t\tsetSelected(doneQuestion);\n\t\t}\n\t}, [data]);\n\n\t//tooltip functions\n\tconst renderTooltipAddBookmark = (props) => (\n\t\t<Tooltip {...props} className='in' id='button-tooltip'>\n\t\t\tAdd Bookmark\n\t\t</Tooltip>\n\t);\n\n\tconst renderTooltipRemoveBookmark = (props) => (\n\t\t<Tooltip {...props} className='in' id='button-tooltip'>\n\t\t\tRemove Bookmark\n\t\t</Tooltip>\n\t);\n\n\tconst renderTooltipSortBookmark = (props) => (\n\t\t<Tooltip {...props} className='in' id='button-tooltip'>\n\t\t\tShow Bookmarks\n\t\t</Tooltip>\n\t);\n\n\tconst renderTooltipResetSortBookmark = (props) => (\n\t\t<Tooltip {...props} className='in' id='button-tooltip'>\n\t\t\tReset Show Bookmarks\n\t\t</Tooltip>\n\t);\n\n\tconst renderTooltipView = (props) => (\n\t\t<Tooltip {...props} className='in' id='button-tooltip'>\n\t\t\tView Notes\n\t\t</Tooltip>\n\t);\n\n\tconst renderTooltipAdd = (props) => (\n\t\t<Tooltip {...props} className='in' id='button-tooltip'>\n\t\t\tAdd Notes\n\t\t</Tooltip>\n\t);\n\n\t// seacrh bar config\n\tconst Sorter = (x) => {\n\t\tif (!x) {\n\t\t\tsetSortMode({\n\t\t\t\tdataField: 'Bookmark',\n\t\t\t\torder: 'desc',\n\t\t\t});\n\t\t\tsetSelectedComplete(x);\n\t\t} else {\n\t\t\tsetSortMode({\n\t\t\t\tdataField: '_is_selected',\n\t\t\t\torder: 'asc',\n\t\t\t});\n\t\t\tsetSelectedComplete(x);\n\t\t}\n\t\tsetIsBookmarkSortFilterSelected(!x);\n\t};\n\tconst SearchBar = (props) => {\n\t\tconst handleChange = (e) => {\n\t\t\tprops.onSearch(e.target.value);\n\t\t};\n\t\treturn (\n\t\t\t<div className='topic-input-container'>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<InputGroup className='mb-4'>\n\t\t\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t\t\t<RandomButton data={data} />\n\t\t\t\t\t\t</InputGroup.Append>\n\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\tclassName='text-center search-input-container'\n\t\t\t\t\t\t\tplaceholder='Search Question.. 🔍'\n\t\t\t\t\t\t\taria-label='Search Question'\n\t\t\t\t\t\t\taria-describedby='basic-addon2'\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tstyle={{ fontSize: '18px', fontWeight: '600' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\tvariant='success'\n\t\t\t\t\t\t\t\tstyle={{ borderTopLeftRadius: '0px', borderBottomLeftRadius: '0px', background: 'rgb(200, 230, 201)' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<p className='completed-questions' style={{ color: 'black', padding: '8px' }}>\n\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: 'bold' }}>\n\t\t\t\t\t\t\t\t\t\t{data.doneQuestions}/{data.questions.length}\n\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\tDone{' '}\n\t\t\t\t\t\t\t\t\t<span className='emojiFix' role='img' aria-label='checker'>\n\t\t\t\t\t\t\t\t\t\t&#9989;\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\tplacement='left'\n\t\t\t\t\t\t\toverlay={isBookmarkSortFilterSelected ? renderTooltipResetSortBookmark : renderTooltipSortBookmark}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant={isBookmarkSortFilterSelected ? 'success' : 'outline-success'}\n\t\t\t\t\t\t\t\tclassName='sort-button'\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tSorter(isBookmarkSortFilterSelected);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span className='label-emoji'>🏷️</span>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t</InputGroup>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\t// table config\n\tconst columns = [\n\t\t{\n\t\t\tdataField: 'id',\n\t\t\ttext: 'id',\n\t\t\theaderStyle: { width: '40px', fontSize: '20px', textAlign: 'center' },\n\t\t\tstyle: { fontSize: '20px', cursor: 'pointer', textAlign: 'center' },\n\t\t\tevents: {\n\t\t\t\tonClick: (e, column, columnIndex, row, rowIndex) => {\n\t\t\t\t\thandleSelect(row, !row._is_selected);\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tdataField: 'question',\n\t\t\ttext: 'Questions',\n\t\t\theaderStyle: { fontSize: '20px', textAlign: 'center', width: '80%' },\n\t\t},\n\t\t{\n\t\t\tdataField: 'links',\n\t\t\ttext: 'Links',\n\t\t\theaderStyle: { fontSize: '20px', textAlign: 'center' },\n\t\t},\n\t\t{\n\t\t\tdataField: 'controls',\n\t\t\ttext: '',\n\t\t\theaderStyle: { fontSize: '20px', textAlign: 'center' },\n\t\t},\n\t\t{\n\t\t\tdataField: '_is_selected',\n\t\t\ttext: 'Is Selected',\n\t\t\theaderStyle: { fontSize: '20px' },\n\t\t\thidden: true,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: '_search_text',\n\t\t\ttext: 'Search Text',\n\t\t\theaderStyle: { fontSize: '20px' },\n\t\t\thidden: true,\n\t\t},\n\t\t{\n\t\t\tdataField: 'Bookmark',\n\t\t\ttext: 'Bookmark',\n\t\t\theaderStyle: { fontSize: '20px' },\n\t\t\thidden: true,\n\t\t},\n\t];\n\tconst rowStyle = { fontSize: '20px' };\n\tconst selectRow = {\n\t\tmode: 'checkbox',\n\t\tstyle: { background: dark ? '#393E46' : '#c8e6c9', fontSize: '24px' },\n\t\tselected: select,\n\t\tonSelect: handleSelect,\n\t\thideSelectAll: true,\n\t};\n\t// func() triggered when a question is marked done\n\tfunction handleSelect(row, isSelect) {\n\t\tlet key = topicName.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();\n\t\tlet newDoneQuestion = [...select];\n\t\tlet updatedQuestionsStatus = data.questions.map((question, index) => {\n\t\t\tif (row.id === index) {\n\t\t\t\tquestion.Done = isSelect;\n\t\t\t\tif (isSelect) {\n\t\t\t\t\tnewDoneQuestion.push(row.id);\n\t\t\t\t} else {\n\t\t\t\t\tvar pos = newDoneQuestion.indexOf(row.id);\n\t\t\t\t\tnewDoneQuestion.splice(pos, 1);\n\t\t\t\t}\n\t\t\t\treturn question;\n\t\t\t} else {\n\t\t\t\treturn question;\n\t\t\t}\n\t\t});\n\t\tupdateData(\n\t\t\tkey,\n\t\t\t{\n\t\t\t\tstarted: newDoneQuestion.length > 0 ? true : false,\n\t\t\t\tdoneQuestions: newDoneQuestion.length,\n\t\t\t\tquestions: updatedQuestionsStatus,\n\t\t\t},\n\t\t\tdata.position\n\t\t);\n\t\tif (isSelectedComplete) displayToast(isSelect, row.id);\n\t}\n\n\t// trigger an information message for user on select change\n\tfunction displayToast(isSelect, id) {\n\t\tconst { type, icon, dir } = {\n\t\t\ttype: isSelect ? 'Done' : 'Incomplete',\n\t\t\ticon: isSelect ? '🎉' : '🙇🏻‍♂️',\n\t\t\tdir: isSelect ? '👇🏻' : '👆🏻',\n\t\t};\n\n\t\tconst title = `${isSelect ? select.length + 1 : select.length - 1}/${data.questions.length} Done`;\n\t\tconst subTitle = `Question pushed ${dir} the table.`;\n\n\t\tconst Card = (\n\t\t\t<>\n\t\t\t\t<p>\n\t\t\t\t\t{title} <span className='emojiFix'>{icon}</span>\n\t\t\t\t</p>\n\t\t\t\t<p className='toast-subtitle'>{subTitle}</p>\n\t\t\t</>\n\t\t);\n\n\t\ttoast(Card, {\n\t\t\tclassName: `toast-${type}`,\n\t\t\tautoClose: 2000,\n\t\t\tcloseButton: true,\n\t\t});\n\t}\n\n\t//Notes component\n\tconst NoteSection = (props) => {\n\t\tlet id = localStorage.getItem('cid');\n\n\t\tconst [quickNotes, setQuickNotes] = useState(data.questions[id]?.Notes);\n\t\tconst addnewnotes = (event) => {\n\t\t\tsetQuickNotes(event.target.value);\n\t\t};\n\n\t\tconst onadd = () => {\n\t\t\tlet key = topicName.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();\n\t\t\t// let id = localStorage.getItem(\"cid\");\n\t\t\tif (id) {\n\t\t\t\tlet que = data.questions;\n\t\t\t\tque[id].Notes = quickNotes.trim().length === 0 ? '' : quickNotes.trim();\n\t\t\t\tupdateData(\n\t\t\t\t\tkey,\n\t\t\t\t\t{\n\t\t\t\t\t\tstarted: data.started,\n\t\t\t\t\t\tdoneQuestions: data.doneQuestions,\n\t\t\t\t\t\tquestions: que,\n\t\t\t\t\t},\n\t\t\t\t\tdata.position\n\t\t\t\t);\n\t\t\t\tlocalStorage.removeItem('cid');\n\t\t\t} else {\n\t\t\t\tsaveAndExitNotes();\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className='note-area'>\n\t\t\t\t\t<div className='note-container'>\n\t\t\t\t\t\t<div className='question-title' style={{ color: 'black' }}></div>\n\t\t\t\t\t\t<textarea maxLength='432' className='note-section' placeholder='your notes here' onChange={addnewnotes}></textarea>\n\t\t\t\t\t\t<div className='button-container'>\n\t\t\t\t\t\t\t<button className='note-exit' onClick={saveAndExitNotes}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className='note-save' onClick={onadd}>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t};\n\t//function for bookmarks\n\tfunction handleBookmark(row, quest) {\n\t\tlet key = topicName.replace(/[^A-Z0-9]+/gi, '_').toLowerCase();\n\t\tlet newDoneQuestion = [...select];\n\t\tlet updatedQuestionsStatus = data.questions.map((question, index) => {\n\t\t\tif (row === index) {\n\t\t\t\tquestion.Bookmark = quest.Bookmark ? false : true;\n\t\t\t\treturn question;\n\t\t\t} else {\n\t\t\t\treturn question;\n\t\t\t}\n\t\t});\n\t\tupdateData(\n\t\t\tkey,\n\t\t\t{\n\t\t\t\tstarted: newDoneQuestion.length > 0 ? true : false,\n\t\t\t\tdoneQuestions: newDoneQuestion.length,\n\t\t\t\tquestions: updatedQuestionsStatus,\n\t\t\t},\n\t\t\tdata.position\n\t\t);\n\t\t// console.log(quest.Bookmark)\n\t}\n\t//function for closing notes\n\tfunction saveAndExitNotes() {\n\t\tdocument.getElementsByClassName('note-section')[0].style.display = 'none';\n\t\tdocument.getElementsByClassName('note-exit')[0].style.display = 'none';\n\t\tdocument.getElementsByClassName('note-save')[0].style.display = 'none';\n\t\tdocument.getElementsByClassName('note-area')[0].style.display = 'none';\n\t\tlocalStorage.removeItem('cid');\n\t}\n\t//funtion for taking notes\n\tfunction shownotes(ind) {\n\t\tdocument.getElementsByClassName('note-section')[0].style.display = 'block';\n\t\tdocument.getElementsByClassName('note-exit')[0].style.display = 'block';\n\t\tdocument.getElementsByClassName('note-save')[0].style.display = 'block';\n\t\tdocument.getElementsByClassName('note-area')[0].style.display = 'block';\n\n\t\tlocalStorage.setItem('cid', ind);\n\t\tdocument.getElementsByClassName('note-section')[0].value = data.questions[ind].Notes;\n\t\tdocument.getElementsByClassName('question-title')[0].innerHTML = data.questions[ind].Problem;\n\t}\n\treturn (\n\t\t<>\n\t\t\t<h3 className='text-center mb-4'>\n\t\t\t\t<Link to='/'>Topics</Link>/{topicName}\n\t\t\t</h3>\n\n\t\t\t{data === undefined ? (\n\t\t\t\t<div className='d-flex justify-content-center'>\n\t\t\t\t\t<Spinner animation='grow' variant='success' />\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<ToolkitProvider\n\t\t\t\t\tclassName='float-right'\n\t\t\t\t\tkeyField='id'\n\t\t\t\t\tdata={questionsTableData}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\trowStyle={rowStyle}\n\t\t\t\t\tsearch\n\t\t\t\t>\n\t\t\t\t\t{(props) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className='header-rand'>{SearchBar({ ...props.searchProps })}</div>\n\t\t\t\t\t\t\t<div className='container container-custom' style={{ overflowAnchor: 'none' }}>\n\t\t\t\t\t\t\t\t<Fade duration={600}>\n\t\t\t\t\t\t\t\t\t<BootstrapTable {...props.baseProps} selectRow={selectRow} sort={sortMode} classes={dark ? 'dark-table' : ''} />\n\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</ToolkitProvider>\n\t\t\t)}\n\t\t\t<ToastContainer />\n\t\t\t<NoteSection />\n\t\t</>\n\t);\n}\n\nfunction RandomButton({ data }) {\n\tlet min = 0;\n\tlet max = data.questions.length - 1;\n\tconst [rnd, setRnd] = useState(Math.floor(Math.random() * (max - min)) + min);\n\tfunction pickRandomHandler() {\n\t\tsetRnd(Math.floor(Math.random() * (max - min)) + min);\n\t}\n\treturn (\n\t\t<Button\n\t\t\tclassName='pick-random-btn'\n\t\t\tonClick={pickRandomHandler}\n\t\t\tvariant='outline-primary'\n\t\t\thref={data.questions[rnd].URL}\n\t\t\ttarget='_blank'\n\t\t>\n\t\t\tPick Random{' '}\n\t\t\t<span role='img' aria-label='woman-juggling-emoji' className='emojiFix'>\n\t\t\t\t🤹🏻‍♀️\n\t\t\t</span>\n\t\t</Button>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}