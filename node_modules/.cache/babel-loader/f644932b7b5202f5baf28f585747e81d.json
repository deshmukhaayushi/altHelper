{"ast":null,"code":"import Localbase from \"localbase\";\nimport QuestionData, { version } from \"../450DSAFinal\";\nlet db = new Localbase(\"db\");\nwindow.db = db;\ndb.config.debug = false;\nconst localVersion = localStorage.getItem(\"450version\");\nwindow.localVersion = localVersion;\nwindow.version = version;\nexport function insertData(callback) {\n  QuestionData.forEach((topic, index) => {\n    db.collection(\"450dsaArchive\").add(topic, topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase());\n  });\n  getData(callback);\n}\nexport function getData(callback) {\n  db.collection(\"450dsaArchive\").get().then(data => {\n    if (data.length === 0) {\n      insertData(callback);\n    } else {\n      data.sort((a, b) => {\n        return a.position - b.position;\n      });\n\n      if (localVersion === null || localVersion === undefined) {\n        localStorage.setItem(\"450version\", 100000000);\n        setTimeout(() => {\n          window.location.reload();\n        }, 3000);\n      }\n\n      if (parseInt(localVersion) !== version) {\n        let i = 0;\n\n        for (let topic of data) {\n          let dataFromJSON = QuestionData[i].questions;\n          let len = dataFromJSON.length;\n          let key = topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase();\n          topic.questions.forEach((qObj, index) => {\n            if (index < len) {\n              if (qObj.Done) {\n                dataFromJSON[index][\"Done\"] = true;\n              }\n\n              if (qObj.hasOwnProperty(\"Bookmark\")) {\n                dataFromJSON[index][\"Bookmark\"] = qObj.Bookmark;\n              } else {\n                dataFromJSON[index][\"Bookmark\"] = false;\n              }\n\n              if (qObj.hasOwnProperty(\"Notes\")) {\n                dataFromJSON[index][\"Notes\"] = qObj.Notes;\n              } else {\n                dataFromJSON[index][\"Notes\"] = \"\";\n              }\n            }\n          });\n          updateDBData(key, {\n            started: topic.started,\n            doneQuestions: topic.doneQuestions,\n            questions: dataFromJSON\n          });\n          i++;\n        }\n\n        localStorage.setItem(\"450version\", version);\n        setTimeout(() => {\n          window.location.reload();\n        }, 3000);\n      } else {\n        return callback(data);\n      }\n    }\n  });\n}\nexport function getTopicData(key, callback) {\n  db.collection(\"450dsaArchive\").doc(key).get().then(document => {\n    callback(document);\n  });\n}\nexport function updateDBData(key, updateData) {\n  db.collection(\"450dsaArchive\").doc(key).update(updateData);\n}\nexport function resetDBData(callback) {\n  db.collection(\"450dsaArchive\").delete().then(response => {\n    callback(response);\n  }).catch(error => {\n    console.log(\"There was an error, do something else\", error);\n  });\n}\nexport function exportDBData(callback) {\n  db.collection(\"450dsaArchive\").get().then(data => {\n    callback(data);\n  });\n}\nexport function importDBData(data, callback) {\n  resetDBData(response => {\n    new Promise((resolve, reject) => {\n      data.forEach((topic, index) => {\n        db.collection(\"450dsaArchive\").add(topic, topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase());\n\n        if (index === data.length - 1) {\n          resolve();\n        }\n      });\n    }).then(() => {\n      getData(data => {\n        callback(data);\n      });\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/piyus/Downloads/450-DSA-master/450-DSA-master/src/services/dbServices.js"],"names":["Localbase","QuestionData","version","db","window","config","debug","localVersion","localStorage","getItem","insertData","callback","forEach","topic","index","collection","add","topicName","replace","toLowerCase","getData","get","then","data","length","sort","a","b","position","undefined","setItem","setTimeout","location","reload","parseInt","i","dataFromJSON","questions","len","key","qObj","Done","hasOwnProperty","Bookmark","Notes","updateDBData","started","doneQuestions","getTopicData","doc","document","updateData","update","resetDBData","delete","response","catch","error","console","log","exportDBData","importDBData","Promise","resolve","reject"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,YAAP,IAAuBC,OAAvB,QAAsC,gBAAtC;AACA,IAAIC,EAAE,GAAG,IAAIH,SAAJ,CAAc,IAAd,CAAT;AACAI,MAAM,CAACD,EAAP,GAAYA,EAAZ;AACAA,EAAE,CAACE,MAAH,CAAUC,KAAV,GAAkB,KAAlB;AACA,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAArB;AACAL,MAAM,CAACG,YAAP,GAAsBA,YAAtB;AACAH,MAAM,CAACF,OAAP,GAAiBA,OAAjB;AAEA,OAAO,SAASQ,UAAT,CAAoBC,QAApB,EAA8B;AACpCV,EAAAA,YAAY,CAACW,OAAb,CAAqB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACtCX,IAAAA,EAAE,CAACY,UAAH,CAAc,eAAd,EAA+BC,GAA/B,CAAmCH,KAAnC,EAA0CA,KAAK,CAACI,SAAN,CAAgBC,OAAhB,CAAwB,cAAxB,EAAwC,GAAxC,EAA6CC,WAA7C,EAA1C;AACA,GAFD;AAGAC,EAAAA,OAAO,CAACT,QAAD,CAAP;AACA;AAED,OAAO,SAASS,OAAT,CAAiBT,QAAjB,EAA2B;AACjCR,EAAAA,EAAE,CAACY,UAAH,CAAc,eAAd,EACEM,GADF,GAEEC,IAFF,CAEQC,IAAD,IAAU;AACf,QAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACtBd,MAAAA,UAAU,CAACC,QAAD,CAAV;AACA,KAFD,MAEO;AACNY,MAAAA,IAAI,CAACE,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnB,eAAOD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAtB;AACA,OAFD;;AAGA,UAAIrB,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAKsB,SAA9C,EAAyD;AACxDrB,QAAAA,YAAY,CAACsB,OAAb,CAAqB,YAArB,EAAmC,SAAnC;AACAC,QAAAA,UAAU,CAAC,MAAM;AAChB3B,UAAAA,MAAM,CAAC4B,QAAP,CAAgBC,MAAhB;AACA,SAFS,EAEP,IAFO,CAAV;AAGA;;AAED,UAAIC,QAAQ,CAAC3B,YAAD,CAAR,KAA2BL,OAA/B,EAAwC;AACvC,YAAIiC,CAAC,GAAG,CAAR;;AACA,aAAK,IAAItB,KAAT,IAAkBU,IAAlB,EAAwB;AACvB,cAAIa,YAAY,GAAGnC,YAAY,CAACkC,CAAD,CAAZ,CAAgBE,SAAnC;AACA,cAAIC,GAAG,GAAGF,YAAY,CAACZ,MAAvB;AACA,cAAIe,GAAG,GAAG1B,KAAK,CAACI,SAAN,CAAgBC,OAAhB,CAAwB,cAAxB,EAAwC,GAAxC,EAA6CC,WAA7C,EAAV;AACAN,UAAAA,KAAK,CAACwB,SAAN,CAAgBzB,OAAhB,CAAwB,CAAC4B,IAAD,EAAO1B,KAAP,KAAiB;AACxC,gBAAIA,KAAK,GAAGwB,GAAZ,EAAiB;AAChB,kBAAIE,IAAI,CAACC,IAAT,EAAe;AACdL,gBAAAA,YAAY,CAACtB,KAAD,CAAZ,CAAoB,MAApB,IAA8B,IAA9B;AACA;;AACD,kBAAI0B,IAAI,CAACE,cAAL,CAAoB,UAApB,CAAJ,EAAqC;AACpCN,gBAAAA,YAAY,CAACtB,KAAD,CAAZ,CAAoB,UAApB,IAAkC0B,IAAI,CAACG,QAAvC;AACA,eAFD,MAEO;AACNP,gBAAAA,YAAY,CAACtB,KAAD,CAAZ,CAAoB,UAApB,IAAkC,KAAlC;AACA;;AACD,kBAAI0B,IAAI,CAACE,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AACjCN,gBAAAA,YAAY,CAACtB,KAAD,CAAZ,CAAoB,OAApB,IAA+B0B,IAAI,CAACI,KAApC;AACA,eAFD,MAEO;AACNR,gBAAAA,YAAY,CAACtB,KAAD,CAAZ,CAAoB,OAApB,IAA+B,EAA/B;AACA;AACD;AACD,WAhBD;AAiBA+B,UAAAA,YAAY,CAACN,GAAD,EAAM;AACjBO,YAAAA,OAAO,EAAEjC,KAAK,CAACiC,OADE;AAEjBC,YAAAA,aAAa,EAAElC,KAAK,CAACkC,aAFJ;AAGjBV,YAAAA,SAAS,EAAED;AAHM,WAAN,CAAZ;AAKAD,UAAAA,CAAC;AACD;;AACD3B,QAAAA,YAAY,CAACsB,OAAb,CAAqB,YAArB,EAAmC5B,OAAnC;AACA6B,QAAAA,UAAU,CAAC,MAAM;AAChB3B,UAAAA,MAAM,CAAC4B,QAAP,CAAgBC,MAAhB;AACA,SAFS,EAEP,IAFO,CAAV;AAGA,OAlCD,MAkCO;AACN,eAAOtB,QAAQ,CAACY,IAAD,CAAf;AACA;AACD;AACD,GAtDF;AAuDA;AAED,OAAO,SAASyB,YAAT,CAAsBT,GAAtB,EAA2B5B,QAA3B,EAAqC;AAC3CR,EAAAA,EAAE,CAACY,UAAH,CAAc,eAAd,EACEkC,GADF,CACMV,GADN,EAEElB,GAFF,GAGEC,IAHF,CAGQ4B,QAAD,IAAc;AACnBvC,IAAAA,QAAQ,CAACuC,QAAD,CAAR;AACA,GALF;AAMA;AAED,OAAO,SAASL,YAAT,CAAsBN,GAAtB,EAA2BY,UAA3B,EAAuC;AAC7ChD,EAAAA,EAAE,CAACY,UAAH,CAAc,eAAd,EAA+BkC,GAA/B,CAAmCV,GAAnC,EAAwCa,MAAxC,CAA+CD,UAA/C;AACA;AAED,OAAO,SAASE,WAAT,CAAqB1C,QAArB,EAA+B;AACrCR,EAAAA,EAAE,CAACY,UAAH,CAAc,eAAd,EACEuC,MADF,GAEEhC,IAFF,CAEQiC,QAAD,IAAc;AACnB5C,IAAAA,QAAQ,CAAC4C,QAAD,CAAR;AACA,GAJF,EAKEC,KALF,CAKSC,KAAD,IAAW;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,KAArD;AACA,GAPF;AAQA;AAED,OAAO,SAASG,YAAT,CAAsBjD,QAAtB,EAAgC;AACtCR,EAAAA,EAAE,CAACY,UAAH,CAAc,eAAd,EACEM,GADF,GAEEC,IAFF,CAEQC,IAAD,IAAU;AACfZ,IAAAA,QAAQ,CAACY,IAAD,CAAR;AACA,GAJF;AAKA;AAED,OAAO,SAASsC,YAAT,CAAsBtC,IAAtB,EAA4BZ,QAA5B,EAAsC;AAC5C0C,EAAAA,WAAW,CAAEE,QAAD,IAAc;AACzB,QAAIO,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChCzC,MAAAA,IAAI,CAACX,OAAL,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC9BX,QAAAA,EAAE,CAACY,UAAH,CAAc,eAAd,EAA+BC,GAA/B,CAAmCH,KAAnC,EAA0CA,KAAK,CAACI,SAAN,CAAgBC,OAAhB,CAAwB,cAAxB,EAAwC,GAAxC,EAA6CC,WAA7C,EAA1C;;AACA,YAAIL,KAAK,KAAKS,IAAI,CAACC,MAAL,GAAc,CAA5B,EAA+B;AAC9BuC,UAAAA,OAAO;AACP;AACD,OALD;AAMA,KAPD,EAOGzC,IAPH,CAOQ,MAAM;AACbF,MAAAA,OAAO,CAAEG,IAAD,IAAU;AACjBZ,QAAAA,QAAQ,CAACY,IAAD,CAAR;AACA,OAFM,CAAP;AAGA,KAXD;AAYA,GAbU,CAAX;AAcA","sourcesContent":["import Localbase from \"localbase\";\nimport QuestionData, { version } from \"../450DSAFinal\";\nlet db = new Localbase(\"db\");\nwindow.db = db;\ndb.config.debug = false;\nconst localVersion = localStorage.getItem(\"450version\");\nwindow.localVersion = localVersion;\nwindow.version = version;\n\nexport function insertData(callback) {\n\tQuestionData.forEach((topic, index) => {\n\t\tdb.collection(\"450dsaArchive\").add(topic, topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase());\n\t});\n\tgetData(callback);\n}\n\nexport function getData(callback) {\n\tdb.collection(\"450dsaArchive\")\n\t\t.get()\n\t\t.then((data) => {\n\t\t\tif (data.length === 0) {\n\t\t\t\tinsertData(callback);\n\t\t\t} else {\n\t\t\t\tdata.sort((a, b) => {\n\t\t\t\t\treturn a.position - b.position;\n\t\t\t\t});\n\t\t\t\tif (localVersion === null || localVersion === undefined) {\n\t\t\t\t\tlocalStorage.setItem(\"450version\", 100000000);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}, 3000);\n\t\t\t\t}\n\n\t\t\t\tif (parseInt(localVersion) !== version) {\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\tfor (let topic of data) {\n\t\t\t\t\t\tlet dataFromJSON = QuestionData[i].questions;\n\t\t\t\t\t\tlet len = dataFromJSON.length;\n\t\t\t\t\t\tlet key = topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase();\n\t\t\t\t\t\ttopic.questions.forEach((qObj, index) => {\n\t\t\t\t\t\t\tif (index < len) {\n\t\t\t\t\t\t\t\tif (qObj.Done) {\n\t\t\t\t\t\t\t\t\tdataFromJSON[index][\"Done\"] = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (qObj.hasOwnProperty(\"Bookmark\")) {\n\t\t\t\t\t\t\t\t\tdataFromJSON[index][\"Bookmark\"] = qObj.Bookmark;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdataFromJSON[index][\"Bookmark\"] = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (qObj.hasOwnProperty(\"Notes\")) {\n\t\t\t\t\t\t\t\t\tdataFromJSON[index][\"Notes\"] = qObj.Notes;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdataFromJSON[index][\"Notes\"] = \"\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tupdateDBData(key, {\n\t\t\t\t\t\t\tstarted: topic.started,\n\t\t\t\t\t\t\tdoneQuestions: topic.doneQuestions,\n\t\t\t\t\t\t\tquestions: dataFromJSON,\n\t\t\t\t\t\t});\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\tlocalStorage.setItem(\"450version\", version);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}, 3000);\n\t\t\t\t} else {\n\t\t\t\t\treturn callback(data);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n\nexport function getTopicData(key, callback) {\n\tdb.collection(\"450dsaArchive\")\n\t\t.doc(key)\n\t\t.get()\n\t\t.then((document) => {\n\t\t\tcallback(document);\n\t\t});\n}\n\nexport function updateDBData(key, updateData) {\n\tdb.collection(\"450dsaArchive\").doc(key).update(updateData);\n}\n\nexport function resetDBData(callback) {\n\tdb.collection(\"450dsaArchive\")\n\t\t.delete()\n\t\t.then((response) => {\n\t\t\tcallback(response);\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(\"There was an error, do something else\", error);\n\t\t});\n}\n\nexport function exportDBData(callback) {\n\tdb.collection(\"450dsaArchive\")\n\t\t.get()\n\t\t.then((data) => {\n\t\t\tcallback(data);\n\t\t});\n}\n\nexport function importDBData(data, callback) {\n\tresetDBData((response) => {\n\t\tnew Promise((resolve, reject) => {\n\t\t\tdata.forEach((topic, index) => {\n\t\t\t\tdb.collection(\"450dsaArchive\").add(topic, topic.topicName.replace(/[^A-Z0-9]+/gi, \"_\").toLowerCase());\n\t\t\t\tif (index === data.length - 1) {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(() => {\n\t\t\tgetData((data) => {\n\t\t\t\tcallback(data);\n\t\t\t});\n\t\t});\n\t});\n}\n"]},"metadata":{},"sourceType":"module"}